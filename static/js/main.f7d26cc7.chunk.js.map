{"version":3,"sources":["ModalStart/ModalStart.tsx","Preview/Preview.tsx","questions.ts","ModalSendQuiz/ModalSendQuiz.tsx","Results/Results.tsx","Timer/Timer.tsx","PageTest/PageTest.tsx","App.tsx","index.tsx"],"names":["style","position","top","left","transform","width","bgcolor","border","borderRadius","boxShadow","pt","px","pb","display","flexDirection","alignItems","ModalStart","React","useState","open","setOpen","handleClose","Button","variant","size","sx","color","fontWeight","fontSize","mt","onClick","Modal","onClose","aria-labelledby","aria-describedby","Box","IconButton","aria-label","alignSelf","component","height","alt","src","id","Typography","textAlign","justifyContent","to","Preview","numberOfQuestions","time","Container","maxWidth","p","mb","backgroundColor","gap","opacity","questionsFromServer","question","options","answer","points","ModalSendQuiz","handleButton","Results","answers","questions","counterCorrectAnswers","setCounterCorrectAnswers","counterPoint","setCounterPoint","counterScore","setCounterScore","minutes","Math","trunc","seconds","useEffect","forEach","prevState","elem","find","alignItem","min","sec","getTime","length","Timer","s","m","t","getElapsedTime","timer","setTimer","setSeconds","setMinutes","interval","setInterval","prevTimer","prevSeconds","prevMinutes","clearInterval","py","PageTest","setQuestion","setAnswers","showResult","setShowResult","setTime","getValue","getCorrectAnswer","userAnswer","correctAnswer","Radio","my","elapsedTime","map","FormControl","FormLabel","RadioGroup","name","value","option","FormControlLabel","control","label","onChange","e","event","copyAnswers","item","findIndex","target","push","handleChange","App","className","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7d26cc7.chunk.js","sourcesContent":["import React from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport {\n  Box,\n  Button,\n  IconButton,\n  Modal, Typography,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  borderRadius: '15px',\n  boxShadow: 24,\n  pt: 2,\n  px: 4,\n  pb: 3,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n};\n\nexport const ModalStart: React.FC = () => {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        size=\"large\"\n        sx={{\n          ':hover': {\n            bgcolor: 'white',\n          },\n          bgcolor: 'white',\n          color: 'black',\n          fontWeight: '700',\n          fontSize: '17px',\n          mt: '15px',\n        }}\n        onClick={handleOpen}\n      >\n        Начать тест\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"parent-modal-title\"\n        aria-describedby=\"parent-modal-description\"\n      >\n        <Box sx={{ ...style, width: 400 }}>\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              alignSelf: 'flex-end',\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Box\n            component=\"img\"\n            sx={{\n              height: 100,\n              width: 100,\n            }}\n            alt=\"Info icon\"\n            src=\"./img/info.png\"\n          />\n          <h2 id=\"parent-modal-title\">Начало теста</h2>\n          <Typography\n            id=\"parent-modal-description\"\n            sx={{\n              textAlign: 'center',\n            }}\n          >\n            Начав тест вы запустите отсчет времени на выполнения этого упражнения.\n            Сбросить время чтобы начать заново сможет только учтель.\n          </Typography>\n          <Box\n            sx={{\n              width: '100%',\n              mt: '20px',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Button\n              onClick={handleClose}\n              variant=\"contained\"\n              sx={{\n                width: '45%',\n                bgcolor: '#e3e3e3',\n                color: '#696969',\n                ':hover': {\n                  bgcolor: '#e3e3e3',\n                },\n              }}\n            >\n              Отмена\n            </Button>\n            <Link to=\"/test\">\n              <Button\n                variant=\"contained\"\n                sx={{\n                  width: '45%',\n                  ':hover': {\n                    bgcolor: '#18d7ff',\n                  },\n                  bgcolor: '#18d7ff',\n                }}\n              >\n                Начать тест\n              </Button>\n            </Link>\n          </Box>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n} from '@mui/material';\nimport { ModalStart } from '../ModalStart/ModalStart';\n\ntype Props = {\n  numberOfQuestions: number,\n  time: number,\n};\n\nexport const Preview: React.FC<Props> = ({ numberOfQuestions, time }) => {\n  return (\n    <Container\n      maxWidth=\"md\"\n      sx={{\n        mt: '20px',\n        bgcolor: '#f8f8f8',\n        p: 2,\n        height: '550px',\n        borderRadius: '25px',\n        border: '1px solid #d9d8d8',\n      }}\n    >\n      <Typography\n        variant=\"h3\"\n        component=\"h3\"\n        sx={{\n          mb: '20px',\n        }}\n      >\n        Test\n      </Typography>\n      <Box\n        sx={{\n          backgroundColor: '#ff8560',\n          height: '70%',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n          borderRadius: '20px',\n          gap: '15px',\n          p: 5,\n        }}\n      >\n        <Box\n          component=\"img\"\n          sx={{\n            height: 90,\n            width: 85,\n            opacity: '0.9',\n          }}\n          alt=\"Watch\"\n          src=\"./img/watch.png\"\n        />\n        <Typography\n          variant=\"h3\"\n          component=\"h2\"\n          sx={{\n            color: '#ffffff',\n            fontWeight: '500',\n          }}\n        >\n          Тест на время\n        </Typography>\n        <Box sx={{\n          display: 'flex',\n          gap: '50px',\n          color: '#fff',\n          alignItems: 'center',\n          width: '100%',\n          justifyContent: 'center',\n        }}\n        >\n          <Box sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            width: '30%',\n          }}\n          >\n            <Typography variant=\"h6\">Кол-во вопросов</Typography>\n            <Typography variant=\"h4\">{numberOfQuestions}</Typography>\n          </Box>\n          <Box\n            sx={{\n              width: '3px',\n              bgcolor: 'white',\n              height: '50px',\n            }}\n          >\n          </Box>\n          <Box sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            width: '30%',\n          }}\n          >\n            <Typography variant=\"h6\">Время на выполнение</Typography>\n            <Typography variant=\"h4\">{time}</Typography>\n          </Box>\n        </Box>\n        <ModalStart />\n      </Box>\n    </Container>\n  );\n};\n","export const questionsFromServer = [\n  {\n    id: 1,\n    question: 'Якщо два або більше дієслова йдуть підряд, то “się” ...',\n    options: ['вживається двічі', 'вживається тільки один раз'],\n    answer: 'вживається тільки один раз',\n    points: 1,\n  },\n  {\n    id: 2,\n    question: 'Не можна ставити się після...',\n    options: ['nie', 'i', 'nigdy', 'zawsze'],\n    answer: 'nie',\n    points: 2,\n  },\n  {\n    id: 3,\n    question: 'Втомитися - ...',\n    options: ['stać', 'pozostać', 'zmęczyć się'],\n    answer: 'zmęczyć się',\n    points: 2,\n  },\n  {\n    id: 4,\n    question: 'Запізнюватися - ...',\n    options: ['spóźniać się', 'zmęczyć się', 'bać się'],\n    answer: 'spóźniać się',\n    points: 1,\n  },\n  {\n    id: 5,\n    question: 'Нервуватися - ...',\n    options: ['zmęczyć się', 'denerwować się', 'uśmiechać się'],\n    answer: 'denerwować się',\n    points: 1,\n  },\n  {\n    id: 6,\n    question: 'Бавитися - ...',\n    options: ['bać się', 'bawić się', 'brać'],\n    answer: 'bawić się',\n    points: 1,\n  },\n  {\n    id: 7,\n    question: 'MY - starzejemy się, WY - ...',\n    options: ['starzejecie się', 'stażeją się', 'starzejesz się'],\n    answer: 'starzejecie się',\n    points: 1,\n  },\n  {\n    id: 8,\n    question: 'JA - boję się, TY - boisz się, ON\\\\ONA\\\\ONO - ...',\n    options: ['boimy się', 'boi się', 'boją się'],\n    answer: 'boi się',\n    points: 1,\n  },\n  {\n    id: 9,\n    question: 'Виберіть речення із ПОМИЛКОЮ❌',\n    options: ['Się on często uśmiecha', 'On często się uśmiecha', 'On uśmiecha się często'],\n    answer: 'Się on często uśmiecha',\n    points: 1,\n  },\n  {\n    id: 10,\n    question: 'Виберіть речення із ПОМИЛКОЮ❌',\n    options: ['Moja siostra boi się myszy', 'Się moja siostra myszy boi', 'Moja siostra się boi myszy'],\n    answer: 'Się moja siostra myszy boi',\n    points: 1,\n  },\n];\n","import React from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport {\n  Box,\n  Button,\n  IconButton,\n  Modal, Typography,\n} from '@mui/material';\n\ntype Props = {\n  handleButton: () => void,\n};\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  borderRadius: '15px',\n  boxShadow: 24,\n  pt: 2,\n  px: 4,\n  pb: 3,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n};\n\nexport const ModalSendQuiz: React.FC<Props> = ({ handleButton }) => {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n      }}\n    >\n      <Button\n        variant=\"contained\"\n        sx={{\n          ':hover': {\n            bgcolor: '#18d7ff',\n          },\n          bgcolor: '#18d7ff',\n          color: 'white',\n          fontWeight: '700',\n          fontSize: '17px',\n        }}\n        onClick={handleOpen}\n      >\n        Завершить тест\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"parent-modal-title\"\n        aria-describedby=\"parent-modal-description\"\n      >\n        <Box sx={{ ...style, width: 400 }}>\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              alignSelf: 'flex-end',\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Box\n            component=\"img\"\n            sx={{\n              height: 100,\n              width: 100,\n            }}\n            alt=\"Info icon\"\n            src=\"./img/info.png\"\n          />\n          <h2 id=\"parent-modal-title\">Завершение теста</h2>\n          <Typography\n            id=\"parent-modal-description\"\n            sx={{\n              textAlign: 'center',\n            }}\n          >\n            Вы действительно завершили тест? Завершив тест вы больше не сможете изменить ответы\n          </Typography>\n          <Box\n            sx={{\n              width: '100%',\n              mt: '20px',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              onClick={handleClose}\n              sx={{\n                width: '45%',\n                bgcolor: '#e3e3e3',\n                color: '#696969',\n                ':hover': {\n                  bgcolor: '#e3e3e3',\n                },\n              }}\n            >\n              Отмена\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                handleButton();\n                handleClose();\n              }}\n              sx={{\n                width: '45%',\n                ':hover': {\n                  bgcolor: '#18d7ff',\n                },\n                bgcolor: '#18d7ff',\n              }}\n            >\n              Завершить тест\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n    </Box>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Box, Typography } from '@mui/material';\n\ntype Props = {\n  answers: Answer[],\n  questions: Question[],\n  time: number,\n};\n\nexport const Results: React.FC<Props> = ({ answers, questions, time }) => {\n  const [counterCorrectAnswers, setCounterCorrectAnswers] = useState(0);\n  const [counterPoint, setCounterPoint] = useState(0);\n  const [counterScore, setCounterScore] = useState(0);\n  const minutes = Math.trunc(time / 60);\n  const seconds = time - (minutes * 60);\n\n  const counterAnswers = () => {\n    questions.forEach((question) => {\n      setCounterScore((prevState) => {\n        return prevState + question.points;\n      });\n\n      const elem = answers.find(answer => answer.id === question.id);\n\n      if (elem) {\n        if (elem.answer === question.answer) {\n          setCounterCorrectAnswers((prevState) => {\n            return prevState + 1;\n          });\n          setCounterPoint((prevState) => {\n            return prevState + question.points;\n          });\n        }\n      }\n    });\n  };\n\n  const getTime = () => {\n    const min = (minutes < 10) ? `0${minutes}` : minutes;\n    const sec = (seconds < 10) ? `0${seconds}` : seconds;\n\n    return `${min}:${sec}`;\n  };\n\n  useEffect(() => {\n    counterAnswers();\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        bgcolor: '#ff8560',\n        p: 4,\n        gap: '20px',\n        borderRadius: '20px',\n      }}\n    >\n      <Typography\n        variant=\"h3\"\n        component=\"h3\"\n        sx={{\n          alignItem: 'center',\n          color: 'white',\n          fontWeight: '600',\n        }}\n      >\n        Тест завершен\n      </Typography>\n      <Box\n        sx={{\n          display: 'flex',\n          gap: '20px',\n          color: 'white',\n          alignItems: 'center',\n        }}\n      >\n        <Box\n          sx={{\n            textAlign: 'center',\n          }}\n        >\n          <Typography>Баллов</Typography>\n          <Typography\n            sx={{\n              fontSize: '24px',\n              fontWeight: '600',\n            }}\n          >\n            {`${counterPoint} из ${counterScore}`}\n          </Typography>\n        </Box>\n        <Box\n          sx={{\n            width: '2px',\n            bgcolor: 'white',\n            height: '45px',\n          }}\n        >\n        </Box>\n        <Box\n          sx={{\n            textAlign: 'center',\n          }}\n        >\n          <Typography>Прошел за</Typography>\n          <Typography\n            sx={{\n              fontSize: '24px',\n              fontWeight: '600',\n            }}\n          >\n            {getTime()}\n          </Typography>\n        </Box>\n        <Box\n          sx={{\n            width: '2px',\n            bgcolor: 'white',\n            height: '45px',\n          }}\n        >\n        </Box>\n        <Box\n          sx={{\n            textAlign: 'center',\n          }}\n        >\n          <Typography>Правильно</Typography>\n          <Typography\n            sx={{\n              fontSize: '24px',\n              fontWeight: '600',\n            }}\n          >\n            {counterCorrectAnswers}\n          </Typography>\n        </Box>\n        <Box\n          sx={{\n            width: '2px',\n            bgcolor: 'white',\n            height: '45px',\n          }}\n        >\n        </Box>\n        <Box\n          sx={{\n            textAlign: 'center',\n          }}\n        >\n          <Typography>Ошибок</Typography>\n          <Typography\n            sx={{\n              fontSize: '24px',\n              fontWeight: '600',\n            }}\n          >\n            {questions.length - counterCorrectAnswers}\n          </Typography>\n        </Box>\n        <Box\n          sx={{\n            width: '2px',\n            bgcolor: 'white',\n            height: '45px',\n          }}\n        >\n        </Box>\n        <Box\n          sx={{\n            textAlign: 'center',\n          }}\n        >\n          <Typography>Не отвечено</Typography>\n          <Typography\n            sx={{\n              fontSize: '24px',\n              fontWeight: '600',\n            }}\n          >\n            {questions.length - answers.length}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import { Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\n\ntype Props = {\n  s: number,\n  m: number,\n  t: number,\n  handleButton: () => void,\n  getElapsedTime: (elapsedTime: number) => void,\n};\n\nexport const Timer: React.FC<Props> = ({\n  s,\n  m,\n  t,\n  handleButton,\n  getElapsedTime,\n}) => {\n  const [timer, setTimer] = useState(t);\n  const [seconds, setSeconds] = useState(s);\n  const [minutes, setMinutes] = useState(m);\n\n  useEffect(() => {\n    const interval: ReturnType<typeof setInterval> = setInterval(() => {\n      setTimer(prevTimer => prevTimer - 1);\n      setSeconds(prevSeconds => prevSeconds - 1);\n      if (seconds === 1) {\n        setSeconds(59);\n        setMinutes((prevMinutes) => prevMinutes - 1);\n      }\n    }, 1000);\n\n    if (timer === 0) {\n      clearInterval(interval);\n      handleButton();\n    }\n\n    return () => {\n      clearInterval(interval);\n      getElapsedTime(t - timer);\n    };\n  }, [timer]);\n\n  const getTime = () => {\n    const min = (minutes < 10) ? `0${minutes}` : minutes;\n    const sec = (seconds < 10) ? `0${seconds}` : seconds;\n\n    return `${min}:${sec}`;\n  };\n\n  return (\n    <Typography\n      sx={{\n        bgcolor: '#809dff',\n        py: 0.5,\n        px: 1,\n        color: 'white',\n        width: '50px',\n        textAlign: 'center',\n        borderRadius: '25px',\n        position: 'sticky',\n        top: '0px',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n      }}\n    >\n      {getTime()}\n    </Typography>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n} from '@mui/material';\nimport { ModalSendQuiz } from '../ModalSendQuiz/ModalSendQuiz';\nimport { Results } from '../Results/Results';\nimport { Timer } from '../Timer/Timer';\n\ntype Props = {\n  questionsFromServer: Question[],\n  timer: number,\n};\n\nexport const PageTest: React.FC<Props> = ({ questionsFromServer, timer }) => {\n  const [questions, setQuestion] = useState<Question[]>([]);\n  const [answers, setAnswers] = useState<Answer[]>([]);\n  const [showResult, setShowResult] = useState(false);\n  const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    setQuestion(questionsFromServer);\n  }, []);\n\n  const getValue = (id: number) => {\n    const elem = answers.find(answer => answer.id === id);\n\n    return elem?.answer || '';\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>, id: number) => {\n    const copyAnswers = [...answers];\n    const item = answers.findIndex(answer => answer.id === id);\n\n    if (item !== -1) {\n      copyAnswers[item].answer = event.target.value;\n    } else {\n      copyAnswers.push({\n        id,\n        answer: event.target.value,\n      });\n    }\n\n    setAnswers(copyAnswers);\n  };\n\n  const handleButton = () => {\n    setShowResult(true);\n  };\n\n  const getElapsedTime = (elapsedTime: number) => {\n    setTime(elapsedTime);\n  };\n\n  const getCorrectAnswer = (userAnswer:string | undefined, correctAnswer:string, answer:string) => {\n    if (answer === correctAnswer && answer !== userAnswer) {\n      return (\n        <Radio\n          sx={{\n            color: '#009b00',\n          }}\n        />\n      );\n    }\n\n    if (answer === correctAnswer && answer === userAnswer) {\n      return (\n        <Radio\n          color=\"success\"\n        />\n      );\n    }\n\n    if (answer !== correctAnswer && answer === userAnswer) {\n      return (\n        <Radio\n          color=\"error\"\n        />\n      );\n    }\n\n    return (\n      <Radio />\n    );\n  };\n\n  return (\n    <Container\n      maxWidth=\"md\"\n    >\n      <Box sx={{\n        bgcolor: '#f8f8f8',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '30px',\n        p: 3,\n        my: '15px',\n        borderRadius: '25px',\n        border: '1px solid #d9d8d8',\n      }}\n      >\n        {\n          !showResult && (\n            <Timer\n              s={timer - (Math.trunc(timer / 60) * 60)}\n              m={Math.trunc(timer / 60)}\n              t={timer}\n              handleButton={handleButton}\n              getElapsedTime={getElapsedTime}\n            />\n          )\n        }\n        {\n          showResult && (<Results answers={answers} questions={questions} time={time} />)\n        }\n        <Box\n          sx={{\n            width: '80%',\n            display: 'flex',\n            flexDirection: 'column',\n            alignSelf: 'center',\n            gap: '20px',\n          }}\n        >\n          {\n            (!showResult) ? (\n              questions.map((question) => (\n                <FormControl key={question.id}>\n                  <FormLabel id=\"demo-radio-buttons-group-label\">{question.question}</FormLabel>\n                  <RadioGroup\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\n                    name=\"radio-buttons-group\"\n                    value={getValue(question.id)}\n                    onChange={(e) => handleChange(e, question.id)}\n                  >\n                    {\n                      question.options.map((option) => (\n                        <FormControlLabel\n                          key={option}\n                          value={option}\n                          control={(\n                            <Radio color=\"warning\" />\n                          )}\n                          label={option}\n                        />\n                      ))\n                    }\n                  </RadioGroup>\n                </FormControl>\n              ))\n            ) : (\n              questions.map((question) => {\n                const userAnswer = answers.find(answer => answer.id === question.id);\n\n                return (\n                  <FormControl key={question.id}>\n                    <FormLabel id=\"demo-radio-buttons-group-label\">{question.question}</FormLabel>\n                    <RadioGroup\n                      aria-labelledby=\"demo-radio-buttons-group-label\"\n                      name=\"radio-buttons-group\"\n                      value={getValue(question.id)}\n                    >\n                      {\n                        question.options.map((option) => (\n                          <FormControlLabel\n                            key={option}\n                            value={option}\n                            control={getCorrectAnswer(userAnswer?.answer, question.answer, option)}\n                            label={option}\n                          />\n                        ))\n                      }\n                    </RadioGroup>\n                  </FormControl>\n                );\n              })\n            )\n          }\n        </Box>\n        {\n          !showResult && (<ModalSendQuiz handleButton={handleButton} />)\n        }\n      </Box>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.scss';\nimport { Preview } from './Preview/Preview';\nimport { questionsFromServer } from './questions';\nimport { PageTest } from './PageTest/PageTest';\n\nexport const App: React.FC = () => {\n  const time = 80;\n\n  return (\n    <div className=\"app\">\n      <Routes>\n        <Route path=\"/test\" element={<PageTest questionsFromServer={questionsFromServer} timer={time} />} />\n        <Route path=\"/\" element={<Preview numberOfQuestions={questionsFromServer.length} time={time} />} />\n      </Routes>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}